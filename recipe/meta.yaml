{% set version = "1.25.1" %}

package:
  name: deno
  version: {{ version }}

source:
  url: https://github.com/denoland/deno/releases/download/v{{ version }}/deno_src.tar.gz
  sha256: a00fc3723377ed13a7b3eb3cc8e6564fc6604e50f7493c50d8189a8c6d457a8c
  patches:
    - 0001-use-autotools-rs-for-building-tinycc.patch

build:
  number: 1
  # ppc64le is currently not supported by deno-ffi
  # error: failed to run custom build command for `deno_ffi v0.51.0 (/home/conda/feedstock_root/build_artifacts/deno_1659987483450/work/ext/ffi)`
  # Caused by:
  #    process didn't exit successfully: `/home/conda/feedstock_root/build_artifacts/deno_1659987483450/work/target/release/build/deno_ffi-7c581e1c41e8d6c6/build-script-build` (exit status: 1)
  #    --- stdout
  #    Unsupported CPU
  skip: True  # [ppc64le]

requirements:
  build:
    - {{ compiler("rust") }}
    # needs c compiler for run_exports
    - {{ compiler("c") }}
    # for some reason, test_ffi pkg needs lld on osx-arm64
    - lld    # [osx and arm64]
    - cargo-bundle-licenses
    - make
  run:   # [osx]
    - __osx >={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]

test:
  commands:
    - deno --help
    - deno run https://deno.land/std/examples/welcome.ts
    - if [ "$DENO_INSTALL_ROOT" != "$PREFIX" ]; then echo "DENO_INTALL_ROOT var not set correctly" && exit 1; fi    # [unix]
    - IF "%DENO_INSTALL_ROOT:/=\%" NEQ "%PREFIX:/=\%\Library" exit 1    # [win]

about:
  home: https://deno.land
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE.md
    - DENO_THIRDPARTY_LICENSES.yml    # [not osx or not arm64]
  summary: A simple, modern and secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust
  doc_url: https://deno.land/manual
  dev_url: https://github.com/denoland/deno

extra:
  recipe-maintainers:
    - msarahan
