{% set version = "2.3.1" %}

package:
  name: deno
  version: {{ version }}

source:
  - url: https://github.com/denoland/deno/releases/download/v{{ version }}/deno_src.tar.gz
    sha256: bde33c59bc458496cfb24743278b0bd0b140169f0b5cfa8c02900c4fb5ab8ca2
    patches:   # [win]
      - 01-fix-libffi-msvc.patch     # [win]
  - url: https://github.com/denoland/deno/releases/download/v{{ version }}/deno-aarch64-unknown-linux-gnu.zip  # [linux and aarch64]
    sha256: 3771ede34037694591846166f6211e7a8ab5cd77a1e7143e637d4457e8708dc7  # [linux and aarch64]
    folder: release-build  # [linux and aarch64]
  - url: https://github.com/denoland/deno/releases/download/v{{ version }}/deno-aarch64-apple-darwin.zip  # [osx and arm64]
    sha256: e3d3d7b21ce89105d96c316e9370b1f05aa6e87687f40faf37a39a613a477014  # [osx and arm64]
    folder: release-build  # [osx and arm64]

build:
  number: 0

requirements:
  build:
    - {{ compiler("rust") }}
    # needs c compiler for run_exports
    - {{ compiler("c") }}   # [not osx or not arm64]
    - {{ stdlib("c") }}     # [not osx or not arm64]
    - cmake    # [win]
    # for some reason, test_ffi pkg needs lld on osx-arm64
    # - lld    # [osx and arm64]
    - cargo-bundle-licenses
    - make   # [unix and not arm64]
    - cmake  # [unix and not arm64]  
    - libclang     # [linux and x86_64]
    - llvmdev      # [linux and x86_64]
    # libprotobuf is on build, not host, since we only need protoc
    - libprotobuf
  # cross-builds also need host libgcc to run the cross-built files
  host:
    - libgcc    # [linux and aarch64]
    - zlib  # [not aarch64]
  run:   # [osx and x86_64]

test:
  files:
    - test-build-arch.js
  commands:
    - deno --help
    - deno run https://docs.deno.com/examples/scripts/hello_world.ts
    - if [ "$DENO_INSTALL_ROOT" != "$PREFIX" ]; then echo "DENO_INTALL_ROOT var not set correctly" && exit 1; fi    # [unix]
    - IF "%DENO_INSTALL_ROOT:/=\%" NEQ "%PREFIX:/=\%\Library" exit 1    # [win]
    - deno run test-build-arch.js

about:
  home: https://deno.land
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE.md
    - DENO_THIRDPARTY_LICENSES.yml
  summary: A simple, modern and secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust
  doc_url: https://deno.land/manual
  dev_url: https://github.com/denoland/deno

extra:
  recipe-maintainers:
    - mdekstrand
    - cderv
    - cscheid
    - dragonstyle
    - msarahan
